# Schedule definitions for thorn WaveToyGPU



# Define some schedule groups to organize the schedule

SCHEDULE GROUP WaveToyGPU_InitialGroup AT initial
{
} "Set up initial conditions"



SCHEDULE GROUP WaveToyGPU_PostStepGroup AT postinitial
{
} "Post-process state variables"

SCHEDULE GROUP WaveToyGPU_PostStepGroup AT postrestrict
{
} "Post-process state variables"

SCHEDULE GROUP WaveToyGPU_PostStepGroup AT postregrid
{
} "Post-process state variables"



SCHEDULE GROUP WaveToyGPU_PostStepGroup IN ODESolvers_PostStep
{
} "Post-process state variables"

SCHEDULE GROUP WaveToyGPU_RHSGroup IN ODESolvers_RHS
{
} "Calculate RHS"



SCHEDULE GROUP WaveToyGPU_AnalysisGroup AT analysis
{
} "Analyse state"

################################################################################



SCHEDULE WaveToyGPU_Initialize IN WaveToyGPU_InitialGroup
{
  LANG: C
  WRITES: phi(interior) psi(interior)
} "Set up initial conditions for the wave equation"

SCHEDULE WaveToyGPU_Sync IN WaveToyGPU_PostStepGroup
{
  LANG: C
  SYNC: state
} "Boundary conditions for the wave equation"

SCHEDULE WaveToyGPU_Boundaries IN WaveToyGPU_PostStepGroup AFTER WaveToyCUDA_Sync
{
  LANG: C
  READS: state(interior)
  WRITES: state(boundary)
} "Boundary conditions for the wave equation"



SCHEDULE WaveToyGPU_EstimateError IN WaveToyGPU_PostStepGroup AFTER (WaveToyCUDA_Sync WaveToyCUDA_Boundaries)
{
  LANG: C
  READS: phi(interior) psi(interior)
  WRITES: CarpetX::regrid_error(interior)
} "Estimate local error for regridding initial conditions"



SCHEDULE WaveToyGPU_RHS IN WaveToyGPU_RHSGroup
{
  LANG: C
  READS: phi(everywhere) psi(everywhere)
  WRITES: phirhs(interior) psirhs(interior)
  SYNC: rhs
} "Calculate RHS for the wave equation"

SCHEDULE WaveToyGPU_RHSSync IN WaveToyGPU_RHSGroup AFTER WaveToyCUDA_RHS
{
  LANG: C
  SYNC: rhs
} "Boundary conditions for the RHS of the wave equation"

SCHEDULE WaveToyGPU_RHSBoundaries IN WaveToyGPU_RHSGroup AFTER WaveToyCUDA_RHSSync
{
  LANG: C
  WRITES: phirhs(boundary) psirhs(boundary)
} "Boundary conditions for the RHS of the wave equation"



SCHEDULE WaveToyGPU_Energy IN WaveToyGPU_AnalysisGroup
{
  LANG: C
  READS: phi(everywhere) psi(interior)
  WRITES: eps(interior)
  SYNC: energy
} "Calculate energy density for the wave equation"

SCHEDULE WaveToyGPU_Error IN WaveToyGPU_AnalysisGroup
{
  LANG: C
  READS: phi(everywhere) psi(everywhere)
  WRITES: phierr(everywhere) psierr(everywhere)
} "Calculate error for the wave equation"
